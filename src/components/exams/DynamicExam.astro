---
/**
 * Dynamic Exam Component
 * Loads and displays exam questions dynamically based on exam ID
 */

import ExamForm from "../exam/ExamForm.astro";
import Question from "../exam/Question.astro";
import RadioOption from "../exam/RadioOption.astro";
import CheckboxOption from "../exam/CheckboxOption.astro";
import ExamStyle from "../exam/ExamStyle.astro";
import type {Question as QuestionType, ExamData} from "../../types/exam";

export interface Props {
	examId: string;
	title: string;
	description?: string;
}

const {examId, title, description} = Astro.props;

// Load exam data dynamically
const examModule = await import(`../../data/exams/exam${examId}.ts`);
const examData = examModule[`exam${examId}Data`] as ExamData;

if (!examData) {
	throw new Error(`Exam data not found for exam${examId}`);
}

const {questions, correctRadioAnswers, correctCheckboxAnswers} = examData;

// Function to shuffle question options
function shuffleQuestionOptions(questions: QuestionType[]): QuestionType[] {
	return questions.map((question) => ({
		...question,
		options: [...question.options].sort(() => Math.random() - 0.5),
	}));
}

// Shuffle options for all questions
const shuffledQuestions = shuffleQuestionOptions(questions);

// Default descriptions for each exam
const defaultDescriptions: Record<string, string> = {
	"01": "Ce questionnaire porte sur les problèmes sociaux et les principales écoles théoriques d'analyse en travail social.",
	"02": "Ce questionnaire porte sur la pensée critique, l'épistémologie et les paradigmes en travail social.",
	"03": "Ce questionnaire porte sur le fonctionnalisme, Durkheim et le paradigme positiviste.",
	"04": "Ce questionnaire porte sur le marxisme, l'approche conflictuelle et l'analyse critique des problèmes sociaux.",
	"05": "Ce questionnaire porte sur le constructivisme social et la construction des problèmes sociaux.",
	"06": "Ce questionnaire porte sur l'interactionnisme symbolique, la théorie de l'étiquetage et la tradition de Chicago.",
};

const examDescription = description || defaultDescriptions[examId] || "";
---

<ExamForm examId={examId} title={title} correctRadioAnswers={correctRadioAnswers} correctCheckboxAnswers={correctCheckboxAnswers}>
	<p class='description'>{examDescription}</p>

	{
		shuffledQuestions.map((q) => (
			<Question id={q.id} title={q.title} question={q.question} explanation={q.explanation} type={q.type}>
				{q.type === "radio" && q.options.map((option) => <RadioOption id={`${q.id}-${option.value}`} name={q.id} value={option.value} label={option.label} />)}
				{q.type === "checkbox" && q.options.map((option) => <CheckboxOption id={`${q.id}-${option.value}`} name={q.id} value={option.value} label={option.label} />)}
			</Question>
		))
	}

	<ExamStyle />
</ExamForm>
