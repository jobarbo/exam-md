---
/**
 * Card Component
 * A reusable card container with consistent styling
 */

export interface Props {
	href?: string;
	disabled?: boolean;
	special?: boolean;
	class?: string;
}

const { href, disabled = false, special = false, class: className = '' } = Astro.props;

const Tag = href && !disabled ? 'a' : 'div';
const additionalProps = href && !disabled ? { href } : {};
---

<Tag
	class:list={['card', { 'card-disabled': disabled, 'card-special': special }, className]}
	{...additionalProps}
>
	<slot />
</Tag>

<style>
	.card {
		background: white;
		border-radius: var(--border-radius, 12px);
		padding: 1.75rem;
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);
		transition: all 0.3s ease;
		text-decoration: none;
		color: var(--text-color, #1f2937);
		position: relative;
		overflow: hidden;
		display: flex;
		flex-direction: column;
		height: 100%;
		border: 1px solid rgba(0, 0, 0, 0.03);
	}

	.card-disabled {
		background: #f9fafb;
		cursor: not-allowed;
		opacity: 0.8;
		box-shadow: none;
	}

	a.card:not(.card-disabled):hover {
		transform: translateY(-5px);
		box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1), 0 4px 10px rgba(0, 0, 0, 0.08);
	}

	a.card:not(.card-disabled)::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 5px;
		background: linear-gradient(90deg, var(--primary-color, #3b82f6), var(--secondary-color, #8b5cf6));
		transform: scaleX(0);
		transform-origin: left;
		transition: transform 0.3s ease;
	}

	a.card:not(.card-disabled):hover::before {
		transform: scaleX(1);
	}

	.card-special {
		border: 1px solid rgba(59, 130, 246, 0.15);
		background-color: rgba(59, 130, 246, 0.02);
	}

	.card-special:hover {
		border-color: rgba(59, 130, 246, 0.2);
		background-color: rgba(59, 130, 246, 0.05);
		transform: translateY(-5px) scale(1.02);
		box-shadow: 0 15px 30px rgba(59, 130, 246, 0.1);
	}
</style>



